name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # ðŸ‘‡ Check out your code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ðŸ‘‡ Enable docker buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ‘‡ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ðŸ‘‡ Build & Push Frontend
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/antiquitas-frontend:latest

      # ðŸ‘‡ Build & Push Backend
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/antiquitas-backend:latest

      # ðŸ‘‡ Build & Push Java Service
      - name: Build and Push Java Service Image
        uses: docker/build-push-action@v5
        with:
          context: ./java-rarity-service
          file: ./java-rarity-service/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/antiquitas-java-service:latest

# If /python-authenticity-service isnâ€™t yet Docker-ready, we leave it out for now.
# Once you have a working Dockerfile there (that doesnâ€™t rely on a requirements.txt),
# you can copy the above step and point `context:` & `file:` at that folder.
